version: '3.8'

services:
  db:
    image: postgres:14.1-alpine
    volumes:
      - postgres_rms_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test:  [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api: &api
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db

  redis:
    image: bitnami/redis:latest
    env_file:
      - ./.env
    ports:
      - "6379:6379"

  celery:
    <<: *api
    command: celery -A core worker --loglevel=info
    ports: [ ]
    env_file:
      - ./.env
    depends_on:
      - redis
      - api

  celery-beat:
    <<: *api
    command: celery -A core beat -l info
    ports: [ ]
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery

  dashboard:
    <<: *api
    command: celery --broker=${REDIS_BACKEND_URL} flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - api
      - redis
      - celery

volumes:
  postgres_rms_data: ~
